name: 9.2-CI/CD Develop to Staging

on:
  push:
    branches: [develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: oscarock17/app-nodejs

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: 07-app-nodejs-docker/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('07-app-nodejs-docker/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache NPM
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('07-app-nodejs-docker/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install dependencies and run tests
      run: |
        cd 07-app-nodejs-docker
        npm install
        npm test

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha
          type=raw,value=staging

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./07-app-nodejs-docker
        file: ./07-app-nodejs-docker/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}

    - name: Docker Compose Up
      run: |
        cd 07-app-nodejs-docker
        docker compose down
        docker compose up -d --build

    - name: Healthcheck
      run: |
        sleep 10
        curl -f http://localhost:3000/api/health
